<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Jedis_study</title>
      <link href="/2021/10/24/jedis-study/"/>
      <url>/2021/10/24/jedis-study/</url>
      
        <content type="html"><![CDATA[<h1 id="Jedis"><a href="#Jedis" class="headerlink" title="Jedis"></a>Jedis</h1><h3 id="Jedis简介"><a href="#Jedis简介" class="headerlink" title="Jedis简介"></a>Jedis简介</h3><p>jedis: Java语言连Redis数据库的工具</p><h3 id="Jedis使用"><a href="#Jedis使用" class="headerlink" title="Jedis使用"></a>Jedis使用</h3><h4 id="Jedis简单使用"><a href="#Jedis简单使用" class="headerlink" title="Jedis简单使用"></a>Jedis简单使用</h4><ol><li><p>导包</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//插入数据</span><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//1.连接Redis</span>        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.操作Redis</span>        jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"wang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.关闭连接</span>        jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">//获取数据</span><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//1.连接Redis</span>        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.操作Redis</span>        <span class="token class-name">String</span> name <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.关闭连接</span>        jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/24/jedis-study/image-20211024220538551.png" alt="获取数据"></p></li></ol><h5 id="操作list数据类型"><a href="#操作list数据类型" class="headerlink" title="操作list数据类型"></a>操作list数据类型</h5><ol><li><p>代码展示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">//1.连接Redis</span>       <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//2.操作Redis</span>       jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span><span class="token string">"list1"</span><span class="token punctuation">,</span><span class="token string">"a1"</span><span class="token punctuation">,</span><span class="token string">"a2"</span><span class="token punctuation">,</span><span class="token string">"a3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       jedis<span class="token punctuation">.</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string">"list1"</span><span class="token punctuation">,</span><span class="token string">"b1"</span><span class="token punctuation">,</span><span class="token string">"b2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span><span class="token string">"list1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> string <span class="token operator">:</span> list1<span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token comment">//3.关闭连接</span>       jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>结果展示<br><img src="/2021/10/24/jedis-study/image-20211024221049216.png" alt="结果展示"></p></li></ol><h5 id="操作hash数据类型"><a href="#操作hash数据类型" class="headerlink" title="操作hash数据类型"></a>操作hash数据类型</h5><ol><li><p>代码展示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//1.连接Redis</span>        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.操作Redis</span>        jedis<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string">"hash1"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"wang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jedis<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string">"hash1"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jedis<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string">"hash1"</span><span class="token punctuation">,</span><span class="token string">"address"</span><span class="token punctuation">,</span><span class="token string">"xian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> hash1 <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">hgetAll</span><span class="token punctuation">(</span><span class="token string">"hash1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hash1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.关闭连接</span>        jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>结果展示<br><img src="/2021/10/24/jedis-study/image-20211024221552156.png" alt="结果展示-hash"></p></li></ol><h4 id="Jedis工具类"><a href="#Jedis工具类" class="headerlink" title="Jedis工具类"></a>Jedis工具类</h4><h5 id="基于连接池获取连接"><a href="#基于连接池获取连接" class="headerlink" title="基于连接池获取连接"></a>基于连接池获取连接</h5><ul><li><p>jedispool:Jedis提供的连接池技术<br>poolConfig: 连接池配置对象</p><p>host:reids 服务地址</p><p>port：redis服务端口号</p></li><li><p>代码展示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">Jedis</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPoolConfig</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JedisUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">JedisPool</span> jp<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token class-name">JedisPoolConfig</span> jpc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jpc<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最大连接池数</span>        jpc<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最大连接数</span>         jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPool</span><span class="token punctuation">(</span>jpc<span class="token punctuation">,</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span>  <span class="token keyword">static</span> <span class="token class-name">Jedis</span> <span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">return</span> jp<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改进</p><p>建立redis.properties</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">redis.host</span><span class="token punctuation">=</span><span class="token attr-value">127.0.0.1</span><span class="token attr-name">redis.port</span><span class="token punctuation">=</span><span class="token attr-value">6379</span><span class="token attr-name">redis.maxTotal</span><span class="token punctuation">=</span><span class="token attr-value">30</span><span class="token attr-name">redis.maxIdle</span><span class="token punctuation">=</span><span class="token attr-value">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">Jedis</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPoolConfig</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ResourceBundle</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JedisUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">JedisPool</span> jp<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token comment">//获取配置文件</span>        <span class="token class-name">ResourceBundle</span>  rb<span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"redis"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JedisPoolConfig</span> jpc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jpc<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"redis.maxTotal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最大连接数</span>        jpc<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"redis.maxIdle"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最小连接数</span>         jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPool</span><span class="token punctuation">(</span>jpc<span class="token punctuation">,</span>rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"redis.host"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"redis.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span>  <span class="token keyword">static</span> <span class="token class-name">Jedis</span> <span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">return</span> jp<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> Jedis </tag>
            
            <tag> nosql </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-live-and-my-love</title>
      <link href="/2021/10/24/my-live-and-my-love/"/>
      <url>/2021/10/24/my-live-and-my-love/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> live-and-love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给懒懒炫耀一下</title>
      <link href="/2021/10/23/gei-lan-lan-xuan-yao-yi-xia/"/>
      <url>/2021/10/23/gei-lan-lan-xuan-yao-yi-xia/</url>
      
        <content type="html"><![CDATA[<h1 id="你看到的都是我想让你看到的"><a href="#你看到的都是我想让你看到的" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h1><h2 id="你看到的都是我想让你看到的-1"><a href="#你看到的都是我想让你看到的-1" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h2><h3 id="你看到的都是我想让你看到的-2"><a href="#你看到的都是我想让你看到的-2" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h3><h4 id="你看到的都是我想让你看到的-3"><a href="#你看到的都是我想让你看到的-3" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h4><h5 id="你看到的都是我想让你看到的-4"><a href="#你看到的都是我想让你看到的-4" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h5><h6 id="你看到的都是我想让你看到的-5"><a href="#你看到的都是我想让你看到的-5" class="headerlink" title="你看到的都是我想让你看到的"></a>你看到的都是我想让你看到的</h6>]]></content>
      
      
      
        <tags>
            
            <tag> lanlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git_study</title>
      <link href="/2021/10/23/git-do/"/>
      <url>/2021/10/23/git-do/</url>
      
        <content type="html"><![CDATA[<h1 id="Github使用"><a href="#Github使用" class="headerlink" title="Github使用"></a>Github使用</h1><h2 id="github文件区域"><a href="#github文件区域" class="headerlink" title="github文件区域"></a>github文件区域</h2><pre class="line-numbers language-none"><code class="language-none">1.工作区 workspace未跟踪与未暂存文件处于本区2.暂存区 index提交到仓库之前的缓存区3.仓库* 本地仓库* 远程仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="GitHub文件状态"><a href="#GitHub文件状态" class="headerlink" title="GitHub文件状态"></a>GitHub文件状态</h2><pre><code>1.未跟踪 untracked    新创建一个文件，处于未跟踪状态，文件位于工作区。2.未暂存 unstaged    修改一个文件，处于未暂存状态，文件位于工作区。3.已暂存     为暂存与为跟踪文件初步提交变为已暂存4.已提交5.不需管理    创建 .gitingore文件，在其中说明不需管理的文件</code></pre><h2 id="GitHub常用命令"><a href="#GitHub常用命令" class="headerlink" title="GitHub常用命令"></a>GitHub常用命令</h2><pre><code>1. git init 初始化git仓库(*)2. git add 工作区文件提交到暂存区  状态：工作区 -&gt; 暂存区    add . :添加所有文件到暂存区    add 文件名 :提交单个文件(*)3. git commit  提交到仓库  暂存区 -&gt; 本地仓库    git commit -m "'说明/标记'"4. git status 查看状态(*)5. git log     打印提交记录(日志)    log --all 显示所有分支    log --pretty=oneline  将提交信息显示为一行    log --abbrey-commit 使得输出的commit更简短    log --graph 以图的方式显示(*)6.git reset --hard commitID(提交记录)  版本回退 还原以前版本7.git reflog 查看删除记录（回滚之后可以看到已经删除的提交记录，包含commit记录）</code></pre><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><pre class="line-numbers language-none"><code class="language-none">为了进行协同开发时，各个用户开发之间互不影响。工作区只能为一个分支进行服务每个分区(*)- git branch   查看本地分支-git branch vv 详细信息(*)- git branch  name(分支名称)  创建新分支  (*)- git checkout name   切换分支(*)- git checkout -b name  切换并创建分支(*)- git merge name  合并提交分支，一个分支上的提交可以合并到另一个分支(*)- git branch -d name 删除分支，删除时做各种检查，只能删除其他分支，不能删除当前分支。、- git branch -D name 强制删除，不做检查<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="git远程仓库托管"><a href="#git远程仓库托管" class="headerlink" title="git远程仓库托管"></a>git远程仓库托管</h2><pre class="line-numbers language-none"><code class="language-none">- git config --global user.name username 用户名- git config --global user.email email 邮箱- ssh -keygen -t rsa 请求ssh密钥获取密钥后复制公钥到github,- cat ~/.ssh/id_rsa.pub 获取密钥- ssh -T git@github.com 验证是否连接成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <pre class="line-numbers language-none"><code class="language-none">- git remote add name(名称）"url(ssh)" 绑定远程仓库- git remote 查看远程仓库- git push [-f]  [--set--upstream] [远端名称[本地分支名][远端分支名]]- git push name（仓库名） name(分支名称) 推送本地分支到远程仓库-git push --set --upstream name（仓库名） name(分支名称) 推送本地分支到远程仓库并建立和远端分支的关联关系-f 强制执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h4><pre class="line-numbers language-none"><code class="language-none">- git clone <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>远程仓库地址 [目录] 将远程仓库克隆到本地</strong></p><h4 id="抓取"><a href="#抓取" class="headerlink" title="抓取"></a>抓取</h4><pre class="line-numbers language-none"><code class="language-none">- git fetch [remote name](远程) [branch name](分支)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    <strong>将仓库中的更新都拉取到本地，但不会进行合并</strong></p><h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><pre class="line-numbers language-none"><code class="language-none">- git merge (remote_name)/(branch_name)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>合并本地分支和远程分支</strong></p><h4 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h4><pre class="line-numbers language-none"><code class="language-none">- git pull [remote name] [branch name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将仓库中的修改都拉到本地并进行合并，等于  fetch + merge</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-study</title>
      <link href="/2021/10/23/redis-study/"/>
      <url>/2021/10/23/redis-study/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis数据库"><a href="#Redis数据库" class="headerlink" title="Redis数据库"></a>Redis数据库</h1><h3 id="1-Redis基础"><a href="#1-Redis基础" class="headerlink" title="1.Redis基础"></a>1.Redis基础</h3><h5 id="1-1关系型数据库"><a href="#1-1关系型数据库" class="headerlink" title="1.1关系型数据库"></a>1.1关系型数据库</h5><p>​        关系型数据库：磁盘IO性能低下，数据关系复杂，扩展性差，不利于大规模集群</p><p>​        解决思路：</p><ul><li>降低磁盘IO次数 –&gt;内存存储</li><li>去除数据间关系  –&gt;不存储关系，仅存储数据</li></ul><h5 id="1-2非关系型数据库NOSQL"><a href="#1-2非关系型数据库NOSQL" class="headerlink" title="1.2非关系型数据库NOSQL"></a>1.2非关系型数据库NOSQL</h5><p>NoSQL： Not-Only-SQL (泛指非关系型的数据库)，作为关系型数据库的补冲</p><p>作用： 应对基于海量用户和海量数据前提下的数据处理关系</p><p>特征：</p><ul><li>可扩容，可伸缩</li><li>大数据下高性能</li><li>灵活的数据模型</li><li>高可用</li></ul><p>常见NoSQL数据库：</p><ul><li>Redis</li><li>MongDB</li><li>memcache</li><li>tair</li></ul><h5 id="1-3-Redis"><a href="#1-3-Redis" class="headerlink" title="1.3 Redis"></a>1.3 Redis</h5><p>概念: Redis是用C语言开发的一个开源的<strong>高性能键值对(key-value)数据库</strong></p><p>特征：</p><ol><li> 数据间没有必然的关联关系</li><li> 内部采用单线程机制进行工作</li><li> 高性能</li><li>多数据类型支持<ul><li>字符串类型         string</li><li>列表类型           list</li><li>散列类型           hash</li><li>集合类型           set</li><li>有序集合类型   sorted_set</li></ul></li><li> 持久化支持，可以进行数据灾难恢复</li></ol><p>应用：</p><ul><li>热点数据加速查询。</li><li>任务队列，如秒杀，抢购等。</li><li>即时信息查看，排行榜，统计信息等。</li><li>时效信息控制，如验证码。</li><li>分布式数据共享，如分布式架构中的session分离</li><li>消息队列</li><li>分布式锁</li></ul><h5 id="1-4-Redis的基本操作"><a href="#1-4-Redis的基本操作" class="headerlink" title="1.4 Redis的基本操作"></a>1.4 Redis的基本操作</h5><h6 id="a-命令行指令"><a href="#a-命令行指令" class="headerlink" title="a.命令行指令"></a>a.命令行指令</h6><ul><li><p>功能性命令<br>set  key value         存储数据</p><p>get key                     获取数据</p></li><li><p>清除屏幕信息<br>clear                         清除屏幕信息</p></li><li><p>帮助信息查询<br>help  get                   获取get帮助信息<br>help<br>help  set</p></li><li><p>退出<br>quit<br>exit</p></li></ul><h3 id="2-Redis数据类型"><a href="#2-Redis数据类型" class="headerlink" title="2.Redis数据类型"></a>2.Redis数据类型</h3><ul><li>Redis本身是一个Map，其中的数据类型都是key-value 的形式存储</li><li>数据类型指的是存储的数据的类型，也是value部分的类型</li></ul><p><img src="/2021/10/23/redis-study/image-20211024095746173.png" alt="image-20211024095746173"></p><h5 id="2-1-String类型"><a href="#2-1-String类型" class="headerlink" title="2.1 String类型"></a>2.1 String类型</h5><ul><li>存储的数据：单个数据，最简单的数据存储类型，也是最常用的数据类型。</li><li>存储数据的格式：一个存储空间保存一个数据</li><li>存储内容： 通常使用字符串，如果以整数的形式表示，可以作为数字操作使用</li></ul><h6 id="String类型数据的基本操作"><a href="#String类型数据的基本操作" class="headerlink" title="String类型数据的基本操作"></a>String类型数据的基本操作</h6><ul><li><p>添加/修改数据</p><pre class="line-numbers language-none"><code class="language-none">set key value <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取数据</p><pre class="line-numbers language-none"><code class="language-none">get key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除数据</p><pre class="line-numbers language-none"><code class="language-none">del key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><img src="/2021/10/23/redis-study/image-20211024100337922.png" alt="image-20211024100337922"></p><ul><li><p>添加/修改多个数据</p><pre class="line-numbers language-none"><code class="language-none">mset key1 value1 key2 value2 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取多个数据</p><pre class="line-numbers language-none"><code class="language-none">mget key1 key2 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取数据字符个数(字符串长度)</p><pre class="line-numbers language-none"><code class="language-none">strlen key <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>追加信息到原始信息后部(如果原始信息在就追加,没有就新建)</p><pre class="line-numbers language-none"><code class="language-none">apppend key vaklue <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><img src="/2021/10/23/redis-study/image-20211024100903392.png" alt="image-20211024100903392"></p><p><strong>单指令，多指令数据操作选择</strong></p><p><img src="/2021/10/23/redis-study/image-20211024101533114.png" alt="image-20211024101533114"></p><h6 id="String-类型数据的扩展操作"><a href="#String-类型数据的扩展操作" class="headerlink" title="String  类型数据的扩展操作"></a><strong>String  类型数据的扩展操作</strong></h6><p>数据需为整数型/浮点型进行操作</p><ul><li><p>设置数值数据增加指定范围的值</p><pre class="line-numbers language-none"><code class="language-none">incr key incrby key incrementincrbyfloat key increament<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>设置数值数据减少指定范围的值</p><pre class="line-numbers language-none"><code class="language-none">decr key decrby key increment<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024102414465.png" alt="image-20211024102414465"></p></li><li><p>设置数据具有指定的生命周期</p><pre class="line-numbers language-none"><code class="language-none">setex ley seconds value psetex key milliseconds value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>秒/毫秒，赋予数据生命周期，时间到即失效，适用于具有生命周期的项目</p></li></ul><p><img src="/2021/10/23/redis-study/image-20211024103422749.png" alt="image-20211024103422749"></p><p><strong>String类型数据操作的注意事项</strong></p><p><img src="/2021/10/23/redis-study/image-20211024103655991.png" alt="image-20211024103655991"></p><p><strong>key的设置约定</strong></p><p><img src="/2021/10/23/redis-study/image-20211024104202645.png" alt="image-20211024104202645"></p><h5 id="2-2-hash类型"><a href="#2-2-hash类型" class="headerlink" title="2.2 hash类型"></a>2.2 hash类型</h5><p><strong>存储的困惑</strong></p><p><img src="/2021/10/23/redis-study/image-20211024104437831.png" alt="image-20211024104437831"></p><ul><li>存储形式： key-value(field1value1 field2 value2 )，一个储存空间保存多个键值对3</li><li>hash类型： 底层使用hash表实现数据存储<br>如果field数量较少，存储结构优化为类数组结构<br>如果filed数量较多，存储结构使用HashMap结构</li></ul><h6 id="hash类型数据的基本操作"><a href="#hash类型数据的基本操作" class="headerlink" title="hash类型数据的基本操作"></a>hash类型数据的基本操作</h6><ul><li><p>添加/修改数据</p><pre class="line-numbers language-none"><code class="language-none">hset key field value <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取数据</p><pre class="line-numbers language-none"><code class="language-none">hget key fieldhgetall key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除数据</p><pre class="line-numbers language-none"><code class="language-none">hdel key field1 [field2]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024105357611.png" alt="image-20211024105357611"></p></li><li><p>添加/修改多个数据</p><pre class="line-numbers language-none"><code class="language-none">hmset key field1 value1 field2 value2 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取多个数据</p><pre class="line-numbers language-none"><code class="language-none">hmget key field1 field2 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取哈希表中字段的数量</p><pre class="line-numbers language-none"><code class="language-none">hlen key <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取哈希表中是否存在指定的字段</p><pre class="line-numbers language-none"><code class="language-none">hexists key field<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024105854308.png" alt="image-20211024105854308"></p></li></ul><h6 id="hash类型数据库扩展操作"><a href="#hash类型数据库扩展操作" class="headerlink" title="hash类型数据库扩展操作"></a>hash类型数据库扩展操作</h6><ul><li><p>获取哈希表中所有的字段名或字段值</p><pre class="line-numbers language-none"><code class="language-none">hkeys key hvals key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>设置指定字段的数值数据增加指定范围的值</p><pre class="line-numbers language-none"><code class="language-none">hincrby key field incrementhincrbyfloat key field increment<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024110251097.png" alt="hash"></p></li><li><p>保存field前判断，有则不变，无则添加</p><pre class="line-numbers language-none"><code class="language-none">hsetnx key field v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><strong>注意事项</strong></p><p><img src="/2021/10/23/redis-study/image-20211024110442137.png" alt="注意事项"></p><h5 id="2-3-List类型"><a href="#2-3-List类型" class="headerlink" title="2.3 List类型"></a>2.3 List类型</h5><ul><li>数据储存需求： 存储多个数据，并对数据进入存储空间的顺序进行区分</li><li>需要的存储结构：一个存储空间保存多个数据，且通过数据可以体现进入数据</li><li>list类型： 保存多个数据，底层使用双向链表存储结构实现</li></ul><p><img src="/2021/10/23/redis-study/image-20211024143949025.png" alt="双向链表"></p><h6 id="list数据类型基本操作"><a href="#list数据类型基本操作" class="headerlink" title="list数据类型基本操作"></a>list数据类型基本操作</h6><h6 id=""><a href="#" class="headerlink" title=""></a></h6><ul><li><p>添加/修改数据</p><pre class="line-numbers language-none"><code class="language-none">lpush key value1 [value2] ...rpush key value1 [value2] ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>获取数据</p><pre class="line-numbers language-none"><code class="language-none">lrange key strat stoplindex key indexllen key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>获取并移除数据</p><pre class="line-numbers language-none"><code class="language-none">lpop keyrpop key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024145009483.png" alt="list基本操作"></p></li></ul><h6 id="list数据类型扩展操作"><a href="#list数据类型扩展操作" class="headerlink" title="list数据类型扩展操作"></a>list数据类型扩展操作</h6><ul><li><p>规定时间内获取并移除数据（阻塞式数据获取）</p><pre class="line-numbers language-none"><code class="language-none">blpop key1 [key2] timeout(时间)brpop key1 [key2] timeout<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在等待时间内获取指定list（可以多个）中数据    并移除数据<br>等待时间结束有数据就取出来，没有为nil</p></li><li><p>移除指定数据 </p><pre class="line-numbers language-none"><code class="language-none">lrem key count value<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>redis 应用于具有操作先后顺序的数据控制</li></ul><p><img src="/2021/10/23/redis-study/image-20211024150705698.png" alt="移除指定数据"></p></li></ul><p>list<strong>类型数据操作注意事项</strong></p><p><img src="/2021/10/23/redis-study/image-20211024151239326.png" alt="list类型数据操作注意事项"></p><h5 id="2-4-set类型"><a href="#2-4-set类型" class="headerlink" title="2.4 set类型"></a>2.4 set类型</h5><ul><li>新的存储需求：存储大量的数据，在查询方面提供更高的效率</li><li>需要的内存结构： 能够保存大量的数据，高效的内部存储机制，便于查询</li><li>set类型：与hash存储结构完全相同，仅存储键，不存储值（nil)，并且值是不允许重复的</li></ul><p><img src="/2021/10/23/redis-study/image-20211024152502163.png" alt="set结构"></p><ul><li>解：将原本的value存储到hash结构的key上.</li></ul><h6 id="set数据类型基本操作"><a href="#set数据类型基本操作" class="headerlink" title="set数据类型基本操作"></a>set数据类型基本操作</h6><h6 id="-1"><a href="#-1" class="headerlink" title=""></a></h6><ul><li><p>添加数据</p><pre class="line-numbers language-none"><code class="language-none">sadd key member1 [member2]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取全部数据</p><pre class="line-numbers language-none"><code class="language-none">smembers key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-none"><code class="language-none">srem key member1 [member2]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024153004958.png" alt="set基本操作"></p></li><li><p>获取集合数据总量</p><pre class="line-numbers language-none"><code class="language-none">scard key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>判断集合中是否包含指定数据</p><pre class="line-numbers language-none"><code class="language-none">sismember key member<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024153451228.png" alt="set基本操作2"></p></li></ul><h6 id="set数据类型扩展操作"><a href="#set数据类型扩展操作" class="headerlink" title="set数据类型扩展操作"></a>set数据类型扩展操作</h6><ul><li><p>随机获取集合中指定数量的数据</p><pre class="line-numbers language-none"><code class="language-none">srandmember key [count]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>随机获取集合中某个数据并移出集合</p><pre class="line-numbers language-none"><code class="language-none">spop key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024154110814.png" alt="set扩展操作"></p></li><li><p>求两个集合的交，并，差集</p><pre class="line-numbers language-none"><code class="language-none">sinter key1 key2sunion key1 key2sdiff key1 key2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024154800261.png" alt="set扩展操作"></p></li><li><p>求两个集合的交，并，差集并存储到指定集合中</p><pre class="line-numbers language-none"><code class="language-none">sinterstore destination key1 key2sunionstore destination key1 key2sdiffstore destination key1 key2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><p><img src="/2021/10/23/redis-study/image-20211024155031844.png" alt="扩展操作3"></p><ul><li><p>将指定数据从原始集合中移动到目标集合中</p><pre class="line-numbers language-none"><code class="language-none">smove source destination member<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024155517114.png" alt="set扩展操作"></p></li></ul><p><strong>set类型数据操作的注意事项</strong></p><p><img src="/2021/10/23/redis-study/image-20211024155742644.png" alt="set注意事项"></p><h5 id="2-5-sorted-set类型"><a href="#2-5-sorted-set类型" class="headerlink" title="2.5 sorted_set类型"></a>2.5 sorted_set类型</h5><ul><li>新的存储需求： 数据排序有利于数据的有效展示，需要提供一种可以根据自身特征进行排序的方式</li><li>需要新的数据结构： 新的存储模型，可以保存可排序的数据</li><li>sorted_set 字段： 在set 的存储结构基础上添加可排序字段</li></ul><p><img src="/2021/10/23/redis-study/image-20211024161937437.png" alt="sorted_set类型"></p><h6 id="sorted-set数据类型基本操作"><a href="#sorted-set数据类型基本操作" class="headerlink" title="sorted_set数据类型基本操作"></a>sorted_set数据类型基本操作</h6><ul><li><p>添加数据</p><pre class="line-numbers language-none"><code class="language-none">zadd key sorce1(排序字段) member1 [sorce2 member2]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取全部数据(正序/逆序)</p><pre class="line-numbers language-none"><code class="language-none">zrange key start stop [withscores]zrevrange key start stop [withscores]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除数据</p><pre class="line-numbers language-none"><code class="language-none">zren key member [member ...]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024162630099.png" alt="sorted_set类型基本操作"></p></li><li><p>按条件获取数据</p><pre class="line-numbers language-none"><code class="language-none">zrangebyscore key min max [withscores] [limit]zrevrangebyscore key max min [withscores]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>按条件删除数据</p><pre class="line-numbers language-none"><code class="language-none">zremrangebyrank key strat stopzremrangebyscore key min max  # max &gt;score &gt;min<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>获取集合数据总量</p><pre class="line-numbers language-none"><code class="language-none">zcard keyzcount key min max<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>集合交，并操作</p><pre class="line-numbers language-none"><code class="language-none">zinterstore destination numkeys(集合个数) key [key ...]zunionstore destination numkeys key [key ...]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>合并后value相同的值，score会相加，新集合再进行排序</p></li></ul><h6 id="sorted-set类型数据扩展操作"><a href="#sorted-set类型数据扩展操作" class="headerlink" title="sorted_set类型数据扩展操作"></a>sorted_set类型数据扩展操作</h6><ul><li><p>获取数据对应的索引</p><pre class="line-numbers language-none"><code class="language-none">zrank key memberzrevrank key member<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>score值获取与修改</p><pre class="line-numbers language-none"><code class="language-none">zscore key memberzincrby key increment member<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><p><strong>sorted_set类型数据操作的注意事项</strong></p><p><img src="/2021/10/23/redis-study/image-20211024171018363.png" alt="sorted_set类型数据操作的注意事项"></p><h5 id="2-6-通用命令"><a href="#2-6-通用命令" class="headerlink" title="2.6 通用命令"></a>2.6 通用命令</h5><h6 id="key通用操作"><a href="#key通用操作" class="headerlink" title="key通用操作"></a>key通用操作</h6><p>key特征： key 是一个字符串，通过key获取热Redis中保存的数据</p><ul><li><p>删除指定key</p><pre class="line-numbers language-none"><code class="language-none">del key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取key 是否存在</p><pre class="line-numbers language-none"><code class="language-none">exists key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取key的类型</p><pre class="line-numbers language-none"><code class="language-none">type key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h6 id="key扩展操作"><a href="#key扩展操作" class="headerlink" title="key扩展操作"></a>key扩展操作</h6><ul><li><p>为指定key设置有效期</p><pre class="line-numbers language-none"><code class="language-none">expire key secondspexpire key milliseconds(毫秒)expireat key timeout(时间戳)pexpireat key millisecons-timeout<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取key的有效时间</p><pre class="line-numbers language-none"><code class="language-none">ttl keypttl key(时间戳)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>切换key从时效性转换为永久性</p><pre class="line-numbers language-none"><code class="language-none">persist key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h6 id="key查询操作"><a href="#key查询操作" class="headerlink" title="key查询操作"></a>key查询操作</h6><ul><li><p>查询key</p><pre class="line-numbers language-none"><code class="language-none">keys pattern(*  ?   [])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/23/redis-study/image-20211024202113015.png" alt="查询模式规则"></p></li></ul><h6 id="key其他操作"><a href="#key其他操作" class="headerlink" title="key其他操作"></a>key其他操作</h6><ul><li><p>key改名</p><pre class="line-numbers language-none"><code class="language-none">rename key newkey(如果newkey存在，则覆盖)renamenx key newkey(newkey不存在的情况下)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>为所有key进行排序</p><pre class="line-numbers language-none"><code class="language-none">sort<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>其他key通用操作</p><pre class="line-numbers language-none"><code class="language-none">help @generic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h5 id="db通用指令"><a href="#db通用指令" class="headerlink" title="db通用指令"></a>db通用指令</h5><h6 id="数据库基本操作"><a href="#数据库基本操作" class="headerlink" title="数据库基本操作"></a>数据库基本操作</h6><p>redis提供16个数据库，每个数据库之间相互独立</p><ul><li><p>切换数据库</p><pre class="line-numbers language-none"><code class="language-none">select index<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>其他操作</p><pre class="line-numbers language-none"><code class="language-none">quitping (测试服务器) pongecho message(输出日志)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>移动操作</p><pre class="line-numbers language-none"><code class="language-none">move key db   (剪切)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>数据清除</p><pre class="line-numbers language-none"><code class="language-none">dbsize   (查看数据数量)flushdb  (删除当前库数据)flushall  (删除所有库数据)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="解决方案列表"><a href="#解决方案列表" class="headerlink" title="解决方案列表"></a>解决方案列表</h4><p><img src="/2021/10/23/redis-study/image-20211024201016662.png" alt="解决方案列表"></p><h3 id="Jeids"><a href="#Jeids" class="headerlink" title="Jeids"></a>Jeids</h3>]]></content>
      
      
      
        <tags>
            
            <tag> nosql </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
